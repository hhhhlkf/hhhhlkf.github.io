<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>软件工程 on Linexus blog</title>
    <link>https://hhhhlkf.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/</link>
    <description>Recent content in 软件工程 on Linexus blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Sep 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://hhhhlkf.github.io/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>吉林大学软件工程荣誉课随机数分组器</title>
      <link>https://hhhhlkf.github.io/post/%E5%90%89%E6%9E%97%E5%A4%A7%E5%AD%A6%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E8%8D%A3%E8%AA%89%E8%AF%BE%E9%9A%8F%E6%9C%BA%E6%95%B0%E5%88%86%E7%BB%84%E5%99%A8/</link>
      <pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://hhhhlkf.github.io/post/%E5%90%89%E6%9E%97%E5%A4%A7%E5%AD%A6%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E8%8D%A3%E8%AA%89%E8%AF%BE%E9%9A%8F%E6%9C%BA%E6%95%B0%E5%88%86%E7%BB%84%E5%99%A8/</guid>
      <description>&lt;div class=&#34;random-group&#34;&gt;&#xD;&#xA;        &lt;div id=&#34;app&#34;&gt;[[message]]&#xD;&#xA;        &lt;/div&gt;&#xD;&#xA;        &lt;div id=&#34;rbk&#34;&gt;&#xD;&#xA;            &lt;div class=&#39;input-num&#39;&gt;&#xD;&#xA;                &lt;span&gt;请输入总共人数：&lt;/span&gt;&#xD;&#xA;                &lt;el-input-number v-model=&#34;numAll&#34; :min=&#34;1&#34; :max=&#34;210000000&#34; @change=&#34;handleChangeAll&#34; size=&#34;large&#34; /&gt;&#xD;&#xA;            &lt;/div&gt;&#xD;&#xA;            &lt;div class=&#39;input-num&#39;&gt;&#xD;&#xA;                &lt;span&gt;请输入每组人数：&lt;/span&gt;&#xD;&#xA;                &lt;el-input-number v-model=&#34;numSper&#34; :min=&#34;1&#34; :max=&#34;210000000&#34; @change=&#34;handleChangeSper&#34; size=&#34;large&#34; /&gt;&#xD;&#xA;            &lt;/div&gt;&#xD;&#xA;            &lt;div id=&#34;start-button&#34;&gt;&#xD;&#xA;                &lt;el-button id=&#34;start&#34; @click=&#34;getStart&#34;&gt;随机分组开始&lt;/el-button&gt;&#xD;&#xA;            &lt;/div&gt;&#xD;&#xA;            &lt;div id=&#39;infinite&#39;&gt;&#xD;&#xA;                &lt;el-scrollbar v-if=&#34;flag&#34; height=&#34;38ch&#34;&gt;&#xD;&#xA;                    &lt;p v-for=&#34;index in count&#34; :key=&#34;index&#34; class=&#34;scrollbar-demo-item&#34;&gt;[[ name[index-1] ]]&#xD;&#xA;                        号同学分到了 [[ divideGroup[index-1] ]] 组&lt;/p&gt;&#xD;&#xA;                &lt;/el-scrollbar&gt;&#xD;&#xA;&#xD;&#xA;            &lt;/div&gt;&#xD;&#xA;        &lt;/div&gt;&#xD;&#xA;        &lt;style&gt;&#xD;&#xA;            #app {&#xD;&#xA;                text-align: center;&#xD;&#xA;                font-family: -apple-system, &#34;Helvetica Neue&#34;, Arial, &#34;PingFang SC&#34;, &#34;Hiragino Sans GB&#34;, STHeiti, &#34;Microsoft YaHei&#34;, &#34;Microsoft JhengHei&#34;, &#34;Source Han Sans SC&#34;, &#34;Noto Sans CJK SC&#34;, &#34;Source Han Sans CN&#34;, &#34;Noto Sans SC&#34;, &#34;Source Han Sans TC&#34;, &#34;Noto Sans CJK TC&#34;, &#34;WenQuanYi Micro Hei&#34;, SimSun, sans-serif;&#xD;&#xA;                line-height: 1.1;&#xD;&#xA;                font-weight: 700;&#xD;&#xA;                font-size: 36px;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            #rbk {&#xD;&#xA;                height: 64ch;&#xD;&#xA;                width: 80ch;&#xD;&#xA;                margin: 0 auto;&#xD;&#xA;                border: 2px solid #282A36;&#xD;&#xA;                border-radius: 2ch;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            .input-num {&#xD;&#xA;                font-family: -apple-system, &#34;Helvetica Neue&#34;, Arial, &#34;PingFang SC&#34;, &#34;Hiragino Sans GB&#34;, STHeiti, &#34;Microsoft YaHei&#34;, &#34;Microsoft JhengHei&#34;, &#34;Source Han Sans SC&#34;, &#34;Noto Sans CJK SC&#34;, &#34;Source Han Sans CN&#34;, &#34;Noto Sans SC&#34;, &#34;Source Han Sans TC&#34;, &#34;Noto Sans CJK TC&#34;, &#34;WenQuanYi Micro Hei&#34;, SimSun, sans-serif;&#xD;&#xA;                line-height: 1.7;&#xD;&#xA;                line-height: 1.1;&#xD;&#xA;                font-weight: 700;&#xD;&#xA;                margin: 20px auto;&#xD;&#xA;                width: 30ch;&#xD;&#xA;                font-size: 24px;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            .el-input-number__increase:hover {&#xD;&#xA;                --el-color-primary: #4F66ED;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            .infinite-list {&#xD;&#xA;                height: 300px;&#xD;&#xA;                padding: 0;&#xD;&#xA;                margin: 0;&#xD;&#xA;                list-style: none;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            .scrollbar-demo-item {&#xD;&#xA;                display: flex;&#xD;&#xA;                align-items: center;&#xD;&#xA;                justify-content: center;&#xD;&#xA;                height: 50px;&#xD;&#xA;                background: #d3daff;&#xD;&#xA;                margin: 10px;&#xD;&#xA;                color: #4F66ED;&#xD;&#xA;                border-radius: 5px;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            .infinite-list .infinite-list-item+.list-item {&#xD;&#xA;                margin-top: 10px;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            #start-button {&#xD;&#xA;                margin: 0 auto;&#xD;&#xA;                width: 15ch;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            #infinite {&#xD;&#xA;                 &#xD;&#xA;                margin: 15px auto;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            #start {&#xD;&#xA;                width: 15ch;&#xD;&#xA;            }&#xD;&#xA;&#xD;&#xA;            .el-button:focus,&#xD;&#xA;            .el-button:hover {&#xD;&#xA;                --el-button-hover-text-color: #4F66ED;&#xD;&#xA;                --el-button-hover-bg-color: #b4bfff;&#xD;&#xA;                --el-button-hover-border-color: #4F66ED;&#xD;&#xA;                --el-button-active-border-color: #4F66ED;&#xD;&#xA;            }&#xD;&#xA;        &lt;/style&gt;&#xD;&#xA;        &#xD;&#xA;        &lt;script type=&#34;text/javascript&#34;&gt;&#xD;&#xA;            const { createApp, ref, reactive } = Vue&#xD;&#xA;            const App = {&#xD;&#xA;                delimiters: [&#34;[[&#34;, &#34;]]&#34;],&#xD;&#xA;                &#xD;&#xA;                setup(props) {&#xD;&#xA;                    let message = &#34;数据发生器&#34;;&#xD;&#xA;                    return {&#xD;&#xA;                        message&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            };&#xD;&#xA;            const app = Vue.createApp(App);&#xD;&#xA;            app.use(ElementPlus);&#xD;&#xA;            app.mount(&#39;#app&#39;);&#xD;&#xA;            const app1 = createApp({&#xD;&#xA;                delimiters: [&#34;[[&#34;, &#34;]]&#34;],&#xD;&#xA;                setup() {&#xD;&#xA;                    const numAll = ref(1);&#xD;&#xA;                    const numSper = ref(1);&#xD;&#xA;                    const count = ref(1);&#xD;&#xA;                    const flag = ref(false);&#xD;&#xA;                    &#xD;&#xA;                    let divideGroup = reactive([]);&#xD;&#xA;                    let name = reactive([]);&#xD;&#xA;                    const handleChangeAll = (value) =&gt; {&#xD;&#xA;                        flag.value = false;&#xD;&#xA;                        if (value &lt; numSper.value) {&#xD;&#xA;                            numSper.value = value;&#xD;&#xA;                        }&#xD;&#xA;                    }&#xD;&#xA;                    const handleChangeSper = (value) =&gt; {&#xD;&#xA;                        &#xD;&#xA;                        &#xD;&#xA;                        flag.value = false;&#xD;&#xA;                        setTimeout(() =&gt; {&#xD;&#xA;                            if (value &gt; numAll.value)&#xD;&#xA;                                numSper.value = numAll.value;&#xD;&#xA;                        }, 5);&#xD;&#xA;                    }&#xD;&#xA;                    const getStart = () =&gt; {&#xD;&#xA;                        &#xD;&#xA;                        random.primNum(numAll.value);&#xD;&#xA;                        const m = new Map();&#xD;&#xA;                        while (numAll.value % numSper.value != 0) {&#xD;&#xA;                            numSper.value--;&#xD;&#xA;                        }&#xD;&#xA;                        let group = numAll.value / numSper.value;&#xD;&#xA;                        let size = m.size;&#xD;&#xA;                        while (m.size != numAll.value) {&#xD;&#xA;                            let newPoint = Math.floor((Math.abs(random.normal(0, 1) * 19260817))) % numAll.value + 1;&#xD;&#xA;                            if (!m.has(newPoint)) {&#xD;&#xA;                                size++;&#xD;&#xA;                                m.set(newPoint, Math.ceil(size / numSper.value));&#xD;&#xA;                            }&#xD;&#xA;                        }&#xD;&#xA;                        &#xD;&#xA;                        count.value = 0;&#xD;&#xA;                        &#xD;&#xA;                        let length = divideGroup.length;&#xD;&#xA;                        if (divideGroup.size != 0) {&#xD;&#xA;                            divideGroup.splice(0, length);&#xD;&#xA;                            name.splice(0, length);&#xD;&#xA;                        }&#xD;&#xA;                        &#xD;&#xA;                        m.forEach(function (value, key) {&#xD;&#xA;                            name.push(key);&#xD;&#xA;                            divideGroup.push(value);&#xD;&#xA;                            count.value++;&#xD;&#xA;                        });&#xD;&#xA;                        &#xD;&#xA;                        flag.value = true;&#xD;&#xA;                        &#xD;&#xA;&#xD;&#xA;                    }&#xD;&#xA;                    return {&#xD;&#xA;                        numAll,&#xD;&#xA;                        numSper,&#xD;&#xA;                        handleChangeAll,&#xD;&#xA;                        handleChangeSper,&#xD;&#xA;                        count,&#xD;&#xA;                        flag,&#xD;&#xA;                        getStart,&#xD;&#xA;                        divideGroup,&#xD;&#xA;                        name&#xD;&#xA;                    }&#xD;&#xA;                }&#xD;&#xA;            });&#xD;&#xA;            app1.use(ElementPlus);&#xD;&#xA;            app1.mount(&#34;#rbk&#34;);&#xD;&#xA;        &lt;/script&gt;&#xD;&#xA;    &lt;/div&gt;</description>
    </item>
  </channel>
</rss>
