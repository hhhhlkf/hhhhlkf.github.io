<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>compiler on Linexus blog</title>
    <link>https://hhhhlkf.github.io/tags/compiler/</link>
    <description>Recent content in compiler on Linexus blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 May 2023 18:32:11 +0800</lastBuildDate><atom:link href="https://hhhhlkf.github.io/tags/compiler/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LLVM IR部分常用语法——支持Sysy2022中间代码生成</title>
      <link>https://hhhhlkf.github.io/post/llvm-ir%E9%83%A8%E5%88%86%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E6%94%AF%E6%8C%81sysy2022%E4%B8%AD%E9%97%B4%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/</link>
      <pubDate>Mon, 01 May 2023 18:32:11 +0800</pubDate>
      
      <guid>https://hhhhlkf.github.io/post/llvm-ir%E9%83%A8%E5%88%86%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E6%94%AF%E6%8C%81sysy2022%E4%B8%AD%E9%97%B4%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/</guid>
      <description>LLVM IR常用语法 加减乘除指令 1.加法指令（add） 加法指令用于对两个数值进行相加。在 LLVM 中，加法指令的语法如下所示：
%result = add &amp;lt;type&amp;gt; &amp;lt;value1&amp;gt;, &amp;lt;value2&amp;gt; 例如，如果我们想将两个整数相加并得到一个整数结果，可以使用以下指令：
%result = add i32 1, 2 %x = add i32 2, 3 %x = add i32 %a, %b %z = add i32 %x, %y 这里，&amp;lt;type&amp;gt;指定为i32，&amp;lt;value1&amp;gt;为整数值1，&amp;lt;value2&amp;gt;为整数值2，&amp;lt;result&amp;gt;为整数类型i32。各种类型的内存空间大小（以位为单位）如下：
在LLVM中，add指令的&amp;lt;type&amp;gt;参数指定了&amp;lt;value1&amp;gt;和&amp;lt;value2&amp;gt;的类型，同时也指定了&amp;lt;result&amp;gt;的类型。支持的类型包括：
 整数类型：i1, i8, i16, i32, i64, i128等； 浮点类型：half, float, double, fp128等； 向量类型：&amp;lt;n x i8&amp;gt;, &amp;lt;n x i16&amp;gt;, &amp;lt;n x i32&amp;gt;等； 指针类型：i8*, i32*, float*等； 标签类型：metadata；  浮点加法 加法指令还有一种形式，可以用于计算两个浮点数之间的差值。语法为：
%result = fadd &amp;lt;type&amp;gt; &amp;lt;value1&amp;gt;, &amp;lt;value2&amp;gt; 2.</description>
    </item>
    
  </channel>
</rss>
